buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://maven.parchmentmc.org' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.parchmentmc:librarian:1.+'
    }
}

plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '7.1.2' // Add this line
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'


version = '1.0'
group = 'me.srrapero720.watermedia' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'watermedia'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'parchment', version: '2022.08.07-1.18.2'

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'watermedia'

            mods {
                watermedia {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'watermedia'

            mods {
                watermedia {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven { url 'https://jitpack.io' }
    maven {
        name = 'Sponge / Mixin'
        url = 'https://repo.spongepowered.org/repository/maven-public/'
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.18.2-40.2.0'

    implementation 'com.github.sealedtx:java-youtube-downloader:3.2.3'
    implementation 'com.github.walkyst:lavaplayer-fork:1.4.1'
    implementation 'com.github.aikaterna:lavaplayer-natives:original-SNAPSHOT'
    implementation 'com.mpatric:mp3agic:0.9.1'
    implementation("uk.co.caprica:vlcj:5.0.0-SNAPSHOT") {
        exclude group: 'net.java.dev.jna', module: 'jna-jpms'
        exclude group: 'net.java.dev.jna', module: 'jna-platform-jpms'
    }

    implementation("uk.co.caprica:vlcj-natives:5.0.0-SNAPSHOT") {
        exclude group: 'net.java.dev.jna', module: 'jna-jpms'
        exclude group: 'net.java.dev.jna', module: 'jna-platform-jpms'
    }
}

shadowJar {
    configurations = [project.configurations.runtimeClasspath]

    // Add relocation rules for each dependency
    relocate 'com.github.sealedtx', 'me.srrapero720.sealedtx'
    relocate 'com.github.walkyst', 'me.srrapero720.walkyst'
    relocate 'com.github.aikaterna', 'me.srrapero720.aikaterna'
    relocate 'com.mpatric', 'me.srrapero720.mpatric'
    relocate 'uk.co.caprica', 'me.srrapero720.caprica'
}

// Make the reobfJar task depend on shadowJar
tasks.build.dependsOn shadowJar

jar {
    manifest {
        attributes([
                "Specification-Title"     : "watermedia",
                "Specification-Vendor"    : "srrapero720",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "srrapero720",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact shadowJar // Replace 'jar' with 'shadowJar'
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
